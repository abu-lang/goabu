// Code generated from /home/michelep/Gitlab/steel-lang/src/antlr/ecarule.g4 by ANTLR 4.9.1. DO NOT EDIT.

package ecaruleParser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 38, 264,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 3, 2, 3, 2, 3, 2,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5,
	3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 6,
	11, 124, 10, 11, 13, 11, 14, 11, 125, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24,
	3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3,
	29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32,
	3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 5,
	33, 206, 10, 33, 3, 34, 3, 34, 3, 34, 3, 34, 5, 34, 212, 10, 34, 3, 35,
	3, 35, 3, 35, 5, 35, 217, 10, 35, 3, 35, 3, 35, 6, 35, 221, 10, 35, 13,
	35, 14, 35, 222, 3, 36, 3, 36, 7, 36, 227, 10, 36, 12, 36, 14, 36, 230,
	11, 36, 3, 37, 3, 37, 5, 37, 234, 10, 37, 3, 38, 3, 38, 3, 39, 3, 39, 7,
	39, 240, 10, 39, 12, 39, 14, 39, 243, 11, 39, 3, 39, 3, 39, 3, 40, 3, 40,
	5, 40, 249, 10, 40, 3, 41, 3, 41, 3, 41, 3, 42, 6, 42, 255, 10, 42, 13,
	42, 14, 42, 256, 3, 42, 7, 42, 260, 10, 42, 12, 42, 14, 42, 263, 11, 42,
	2, 2, 43, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20,
	39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29,
	57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 2, 73, 2, 75,
	2, 77, 37, 79, 2, 81, 2, 83, 38, 3, 2, 8, 5, 2, 11, 12, 15, 15, 34, 34,
	3, 2, 51, 59, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 41, 41, 94, 94, 100,
	100, 104, 104, 112, 112, 116, 116, 118, 118, 4, 2, 67, 92, 99, 124, 6,
	2, 50, 59, 67, 92, 97, 97, 99, 124, 2, 270, 2, 3, 3, 2, 2, 2, 2, 5, 3,
	2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59,
	3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2,
	67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2,
	3, 85, 3, 2, 2, 2, 5, 93, 3, 2, 2, 2, 7, 96, 3, 2, 2, 2, 9, 99, 3, 2, 2,
	2, 11, 102, 3, 2, 2, 2, 13, 106, 3, 2, 2, 2, 15, 111, 3, 2, 2, 2, 17, 115,
	3, 2, 2, 2, 19, 120, 3, 2, 2, 2, 21, 123, 3, 2, 2, 2, 23, 129, 3, 2, 2,
	2, 25, 135, 3, 2, 2, 2, 27, 140, 3, 2, 2, 2, 29, 145, 3, 2, 2, 2, 31, 149,
	3, 2, 2, 2, 33, 152, 3, 2, 2, 2, 35, 156, 3, 2, 2, 2, 37, 159, 3, 2, 2,
	2, 39, 163, 3, 2, 2, 2, 41, 165, 3, 2, 2, 2, 43, 168, 3, 2, 2, 2, 45, 170,
	3, 2, 2, 2, 47, 173, 3, 2, 2, 2, 49, 175, 3, 2, 2, 2, 51, 177, 3, 2, 2,
	2, 53, 179, 3, 2, 2, 2, 55, 181, 3, 2, 2, 2, 57, 183, 3, 2, 2, 2, 59, 190,
	3, 2, 2, 2, 61, 192, 3, 2, 2, 2, 63, 194, 3, 2, 2, 2, 65, 205, 3, 2, 2,
	2, 67, 211, 3, 2, 2, 2, 69, 216, 3, 2, 2, 2, 71, 224, 3, 2, 2, 2, 73, 233,
	3, 2, 2, 2, 75, 235, 3, 2, 2, 2, 77, 237, 3, 2, 2, 2, 79, 248, 3, 2, 2,
	2, 81, 250, 3, 2, 2, 2, 83, 254, 3, 2, 2, 2, 85, 86, 7, 102, 2, 2, 86,
	87, 7, 103, 2, 2, 87, 88, 7, 104, 2, 2, 88, 89, 7, 99, 2, 2, 89, 90, 7,
	119, 2, 2, 90, 91, 7, 110, 2, 2, 91, 92, 7, 118, 2, 2, 92, 4, 3, 2, 2,
	2, 93, 94, 7, 107, 2, 2, 94, 95, 7, 112, 2, 2, 95, 6, 3, 2, 2, 2, 96, 97,
	7, 113, 2, 2, 97, 98, 7, 112, 2, 2, 98, 8, 3, 2, 2, 2, 99, 100, 7, 102,
	2, 2, 100, 101, 7, 113, 2, 2, 101, 10, 3, 2, 2, 2, 102, 103, 7, 99, 2,
	2, 103, 104, 7, 110, 2, 2, 104, 105, 7, 110, 2, 2, 105, 12, 3, 2, 2, 2,
	106, 107, 7, 117, 2, 2, 107, 108, 7, 113, 2, 2, 108, 109, 7, 111, 2, 2,
	109, 110, 7, 103, 2, 2, 110, 14, 3, 2, 2, 2, 111, 112, 7, 104, 2, 2, 112,
	113, 7, 113, 2, 2, 113, 114, 7, 116, 2, 2, 114, 16, 3, 2, 2, 2, 115, 116,
	7, 116, 2, 2, 116, 117, 7, 119, 2, 2, 117, 118, 7, 110, 2, 2, 118, 119,
	7, 103, 2, 2, 119, 18, 3, 2, 2, 2, 120, 121, 7, 61, 2, 2, 121, 20, 3, 2,
	2, 2, 122, 124, 9, 2, 2, 2, 123, 122, 3, 2, 2, 2, 124, 125, 3, 2, 2, 2,
	125, 123, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126, 127, 3, 2, 2, 2, 127,
	128, 8, 11, 2, 2, 128, 22, 3, 2, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131,
	7, 106, 2, 2, 131, 132, 7, 107, 2, 2, 132, 133, 7, 117, 2, 2, 133, 134,
	7, 48, 2, 2, 134, 24, 3, 2, 2, 2, 135, 136, 7, 103, 2, 2, 136, 137, 7,
	122, 2, 2, 137, 138, 7, 118, 2, 2, 138, 139, 7, 48, 2, 2, 139, 26, 3, 2,
	2, 2, 140, 141, 7, 112, 2, 2, 141, 142, 7, 119, 2, 2, 142, 143, 7, 110,
	2, 2, 143, 144, 7, 110, 2, 2, 144, 28, 3, 2, 2, 2, 145, 146, 7, 99, 2,
	2, 146, 147, 7, 112, 2, 2, 147, 148, 7, 102, 2, 2, 148, 30, 3, 2, 2, 2,
	149, 150, 7, 113, 2, 2, 150, 151, 7, 116, 2, 2, 151, 32, 3, 2, 2, 2, 152,
	153, 7, 112, 2, 2, 153, 154, 7, 113, 2, 2, 154, 155, 7, 118, 2, 2, 155,
	34, 3, 2, 2, 2, 156, 157, 7, 63, 2, 2, 157, 158, 7, 63, 2, 2, 158, 36,
	3, 2, 2, 2, 159, 160, 7, 63, 2, 2, 160, 161, 7, 49, 2, 2, 161, 162, 7,
	63, 2, 2, 162, 38, 3, 2, 2, 2, 163, 164, 7, 62, 2, 2, 164, 40, 3, 2, 2,
	2, 165, 166, 7, 62, 2, 2, 166, 167, 7, 63, 2, 2, 167, 42, 3, 2, 2, 2, 168,
	169, 7, 64, 2, 2, 169, 44, 3, 2, 2, 2, 170, 171, 7, 64, 2, 2, 171, 172,
	7, 63, 2, 2, 172, 46, 3, 2, 2, 2, 173, 174, 7, 63, 2, 2, 174, 48, 3, 2,
	2, 2, 175, 176, 7, 45, 2, 2, 176, 50, 3, 2, 2, 2, 177, 178, 7, 47, 2, 2,
	178, 52, 3, 2, 2, 2, 179, 180, 7, 49, 2, 2, 180, 54, 3, 2, 2, 2, 181, 182,
	7, 44, 2, 2, 182, 56, 3, 2, 2, 2, 183, 184, 7, 101, 2, 2, 184, 185, 7,
	113, 2, 2, 185, 186, 7, 112, 2, 2, 186, 187, 7, 101, 2, 2, 187, 188, 7,
	99, 2, 2, 188, 189, 7, 118, 2, 2, 189, 58, 3, 2, 2, 2, 190, 191, 7, 42,
	2, 2, 191, 60, 3, 2, 2, 2, 192, 193, 7, 43, 2, 2, 193, 62, 3, 2, 2, 2,
	194, 195, 7, 46, 2, 2, 195, 64, 3, 2, 2, 2, 196, 197, 7, 118, 2, 2, 197,
	198, 7, 116, 2, 2, 198, 199, 7, 119, 2, 2, 199, 206, 7, 103, 2, 2, 200,
	201, 7, 104, 2, 2, 201, 202, 7, 99, 2, 2, 202, 203, 7, 110, 2, 2, 203,
	204, 7, 117, 2, 2, 204, 206, 7, 103, 2, 2, 205, 196, 3, 2, 2, 2, 205, 200,
	3, 2, 2, 2, 206, 66, 3, 2, 2, 2, 207, 212, 7, 50, 2, 2, 208, 212, 5, 71,
	36, 2, 209, 210, 7, 47, 2, 2, 210, 212, 5, 71, 36, 2, 211, 207, 3, 2, 2,
	2, 211, 208, 3, 2, 2, 2, 211, 209, 3, 2, 2, 2, 212, 68, 3, 2, 2, 2, 213,
	217, 5, 67, 34, 2, 214, 215, 7, 47, 2, 2, 215, 217, 7, 50, 2, 2, 216, 213,
	3, 2, 2, 2, 216, 214, 3, 2, 2, 2, 217, 218, 3, 2, 2, 2, 218, 220, 7, 48,
	2, 2, 219, 221, 5, 73, 37, 2, 220, 219, 3, 2, 2, 2, 221, 222, 3, 2, 2,
	2, 222, 220, 3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 70, 3, 2, 2, 2, 224,
	228, 5, 75, 38, 2, 225, 227, 5, 73, 37, 2, 226, 225, 3, 2, 2, 2, 227, 230,
	3, 2, 2, 2, 228, 226, 3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229, 72, 3, 2,
	2, 2, 230, 228, 3, 2, 2, 2, 231, 234, 7, 50, 2, 2, 232, 234, 5, 75, 38,
	2, 233, 231, 3, 2, 2, 2, 233, 232, 3, 2, 2, 2, 234, 74, 3, 2, 2, 2, 235,
	236, 9, 3, 2, 2, 236, 76, 3, 2, 2, 2, 237, 241, 7, 36, 2, 2, 238, 240,
	5, 79, 40, 2, 239, 238, 3, 2, 2, 2, 240, 243, 3, 2, 2, 2, 241, 239, 3,
	2, 2, 2, 241, 242, 3, 2, 2, 2, 242, 244, 3, 2, 2, 2, 243, 241, 3, 2, 2,
	2, 244, 245, 7, 36, 2, 2, 245, 78, 3, 2, 2, 2, 246, 249, 10, 4, 2, 2, 247,
	249, 5, 81, 41, 2, 248, 246, 3, 2, 2, 2, 248, 247, 3, 2, 2, 2, 249, 80,
	3, 2, 2, 2, 250, 251, 7, 94, 2, 2, 251, 252, 9, 5, 2, 2, 252, 82, 3, 2,
	2, 2, 253, 255, 9, 6, 2, 2, 254, 253, 3, 2, 2, 2, 255, 256, 3, 2, 2, 2,
	256, 254, 3, 2, 2, 2, 256, 257, 3, 2, 2, 2, 257, 261, 3, 2, 2, 2, 258,
	260, 9, 7, 2, 2, 259, 258, 3, 2, 2, 2, 260, 263, 3, 2, 2, 2, 261, 259,
	3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 84, 3, 2, 2, 2, 263, 261, 3, 2,
	2, 2, 14, 2, 125, 205, 211, 216, 222, 228, 233, 241, 248, 256, 261, 3,
	8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'default'", "'in'", "'on'", "'do'", "'all'", "'some'", "'for'", "'rule'",
	"';'", "", "'this.'", "'ext.'", "'null'", "'and'", "'or'", "'not'", "'=='",
	"'=/='", "'<'", "'<='", "'>'", "'>='", "'='", "'+'", "'-'", "'/'", "'*'",
	"'concat'", "'('", "')'", "','",
}

var lexerSymbolicNames = []string{
	"", "DEFAULT", "IN", "ON", "DO", "ALL", "SOME", "FOR", "RULE", "SEMICOLON",
	"WS", "THIS", "EXT", "UNDEF", "AND", "OR", "NOT", "EQ", "NEQ", "LT", "LEQ",
	"GT", "GEQ", "ASSIGN", "PLUS", "MINUS", "DIV", "MUL", "CONCAT", "ROUNDLEFT",
	"ROUNDRIGHT", "COMMA", "BOOL", "INT", "DEC", "STR", "ID",
}

var lexerRuleNames = []string{
	"DEFAULT", "IN", "ON", "DO", "ALL", "SOME", "FOR", "RULE", "SEMICOLON",
	"WS", "THIS", "EXT", "UNDEF", "AND", "OR", "NOT", "EQ", "NEQ", "LT", "LEQ",
	"GT", "GEQ", "ASSIGN", "PLUS", "MINUS", "DIV", "MUL", "CONCAT", "ROUNDLEFT",
	"ROUNDRIGHT", "COMMA", "BOOL", "INT", "DEC", "POS", "DIGIT", "POSDIGIT",
	"STR", "STRCHR", "ESC", "ID",
}

type ecaruleLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewecaruleLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ecaruleLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewecaruleLexer(input antlr.CharStream) *ecaruleLexer {
	l := new(ecaruleLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ecarule.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ecaruleLexer tokens.
const (
	ecaruleLexerDEFAULT    = 1
	ecaruleLexerIN         = 2
	ecaruleLexerON         = 3
	ecaruleLexerDO         = 4
	ecaruleLexerALL        = 5
	ecaruleLexerSOME       = 6
	ecaruleLexerFOR        = 7
	ecaruleLexerRULE       = 8
	ecaruleLexerSEMICOLON  = 9
	ecaruleLexerWS         = 10
	ecaruleLexerTHIS       = 11
	ecaruleLexerEXT        = 12
	ecaruleLexerUNDEF      = 13
	ecaruleLexerAND        = 14
	ecaruleLexerOR         = 15
	ecaruleLexerNOT        = 16
	ecaruleLexerEQ         = 17
	ecaruleLexerNEQ        = 18
	ecaruleLexerLT         = 19
	ecaruleLexerLEQ        = 20
	ecaruleLexerGT         = 21
	ecaruleLexerGEQ        = 22
	ecaruleLexerASSIGN     = 23
	ecaruleLexerPLUS       = 24
	ecaruleLexerMINUS      = 25
	ecaruleLexerDIV        = 26
	ecaruleLexerMUL        = 27
	ecaruleLexerCONCAT     = 28
	ecaruleLexerROUNDLEFT  = 29
	ecaruleLexerROUNDRIGHT = 30
	ecaruleLexerCOMMA      = 31
	ecaruleLexerBOOL       = 32
	ecaruleLexerINT        = 33
	ecaruleLexerDEC        = 34
	ecaruleLexerSTR        = 35
	ecaruleLexerID         = 36
)
